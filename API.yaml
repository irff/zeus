swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.0"
  title: Quint API

# Describe your paths here
paths:
  /jobs:
    get:
      summary: Get all jobs
      parameters:
        - in: query
          name: fields
          description: |
            The list of fields that wants to be retrieved.
            By default, all fields will be returned.
          type: array
          required: false
          items:
            type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items: 
              $ref: "#/definitions/JobPost"
  /jobs/{jobId}:
    get:
      summary: Get specific job details
      parameters:
        - in: path
          name: jobId
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/JobPost"
  /students/{studentId}/jobs:
    post:
      summary: Apply a student to the job
      parameters:
        - in: body
          required: true
          name: jobId
          schema:
            type: object
            properties:
              jobId:
                type: string
        - in: path
          name: studentId
          required: true
          type: string
      responses:
        204:
          description: Successful response
    get:
      summary: Get all jobs that the specified student has applied
      parameters:
        - in: path
          name: studentId
          required: true
          type: string
        - in: query
          name: fields
          description: |
            The list of fields that wants to be retrieved.
            By default, all fields will be returned.
          type: array
          required: false
          items:
            type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Application"
  /students/register:
    post:
      summary: Register a student
      parameters:
        - in: body
          name: studentData
          required: true
          schema:
            $ref: "#/definitions/Student"
      responses:
        204:
          description: Successful response
  /students/login:
    post:
      summary: Login a student
      parameters:
        - in: body
          name: credentials
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              token:
                type: string
              user_id:
                type: string
              name:
                type: string
        403:
          description: Invalid credentials
          
  /students/login/linkedin:
    get:
      summary: login a student via linkedin authorization. To use this, open the endpoint in a new window, and later the new window will call parent.processLogin() function with the data of the student as the parameter
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              token:
                type: string
              user_id:
                type: string
              name:
                type: string
definitions:
  User:
    type: object
    properties:
      id:
        type: number
      email:
        type: string
      password:
        type: string
      created_time:
        type: string
        description: Unix timestamp
  Student:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      major:
        type: string
      school:
        type: string
      resume_url:
        type: string
      linkedin_url:
        type: string
      photo_url:
        type: string
      headline:
        type: string
  Company:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      office_locations:
        type: array
        items:
          $ref: "#/definitions/OfficeLocation"
      job_posts:
        type: array
        items:
          $ref: "#/definitions/JobPost"
      industry:
        type: string
      website:
        type: string
      logo_url:
        type: string
      photos:
        type: string
      contact_person:
        $ref: "#/definitions/ContactPerson"
  OfficeLocation:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      address:
        type: string
      location_lat:
        type: number
      location_lon:
        type: number
  ContactPerson:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      role:
        type: string
      phone:
        type: string
      email:
        type: string
  JobPost:
    type: object
    properties:
      id:
        type: number
      role:
        type: string
      why_us:
        type: string
      salary:
        type: number
      technical_requirements:
        type: string
      internship_schedule:
        type: string
      tasks:
        type: string
      skills_gained:
        type: string
      experiences_gained:
        type: string
      contact_person:
        $ref: "#/definitions/ContactPerson"
  Application:
    type: object
    properties:
      id:
        type: number
      job_post:
        $ref: "#/definitions/JobPost"
      student:
        $ref: "#/definitions/Student"
      applied_at:
        type: string
        description: Unix timestamp
      status:
        type: string